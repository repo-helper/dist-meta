entry_points: {}
filename: pydash-5.0.0-py3-none-any.whl
has_license: false
metadata:
- - Metadata-Version
  - '2.1'
- - Name
  - pydash
- - Version
  - 5.0.0
- - Summary
  - The kitchen sink of Python utility libraries for doing "stuff" in a functional
    way. Based on the Lo-Dash Javascript library.
- - Home-page
  - https://github.com/dgilland/pydash
- - Author
  - Derrick Gilland
- - Author-email
  - dgilland@gmail.com
- - License
  - MIT License
- - Keywords
  - pydash utility functional lodash underscore
- - Platform
  - UNKNOWN
- - Classifier
  - 'Development Status :: 5 - Production/Stable'
- - Classifier
  - 'License :: OSI Approved :: MIT License'
- - Classifier
  - 'Intended Audience :: Developers'
- - Classifier
  - 'Operating System :: OS Independent'
- - Classifier
  - 'Programming Language :: Python'
- - Classifier
  - 'Programming Language :: Python :: 3'
- - Classifier
  - 'Programming Language :: Python :: 3.6'
- - Classifier
  - 'Programming Language :: Python :: 3.7'
- - Classifier
  - 'Programming Language :: Python :: 3.8'
- - Classifier
  - 'Programming Language :: Python :: 3.9'
- - Classifier
  - 'Topic :: Software Development :: Libraries'
- - Classifier
  - 'Topic :: Software Development :: Libraries :: Python Modules'
- - Classifier
  - 'Topic :: Utilities'
- - Requires-Python
  - '>=3.6'
- - Provides-Extra
  - dev
- - Requires-Dist
  - black ; extra == 'dev'
- - Requires-Dist
  - coverage ; extra == 'dev'
- - Requires-Dist
  - docformatter ; extra == 'dev'
- - Requires-Dist
  - flake8 ; extra == 'dev'
- - Requires-Dist
  - flake8-black ; extra == 'dev'
- - Requires-Dist
  - flake8-bugbear ; extra == 'dev'
- - Requires-Dist
  - flake8-isort ; extra == 'dev'
- - Requires-Dist
  - invoke ; extra == 'dev'
- - Requires-Dist
  - isort ; extra == 'dev'
- - Requires-Dist
  - pylint ; extra == 'dev'
- - Requires-Dist
  - pytest ; extra == 'dev'
- - Requires-Dist
  - pytest-cov ; extra == 'dev'
- - Requires-Dist
  - pytest-flake8 ; extra == 'dev'
- - Requires-Dist
  - pytest-pylint ; extra == 'dev'
- - Requires-Dist
  - Sphinx ; extra == 'dev'
- - Requires-Dist
  - sphinx-rtd-theme ; extra == 'dev'
- - Requires-Dist
  - tox ; extra == 'dev'
- - Requires-Dist
  - twine ; extra == 'dev'
- - Requires-Dist
  - wheel ; extra == 'dev'
- - Description
  - "pydash\n******\n\n|version| |build| |coveralls| |license|\n\nThe kitchen sink\
    \ of Python utility libraries for doing \"stuff\" in a functional way. Based on\
    \ the `Lo-Dash <http://lodash.com/>`_  Javascript library.\n\nNote\n====\n\nLooking\
    \ for a library that is more memory efficient and better suited for large datasets?\
    \ Check out `fnc <https://github.com/dgilland/fnc>`_! It's built around generators\
    \ and iteration and has iteratee-first function signatures.\n\n\nLinks\n=====\n\
    \n- Project: https://github.com/dgilland/pydash\n- Documentation: http://pydash.readthedocs.org\n\
    - PyPi: https://pypi.python.org/pypi/pydash/\n- Github Actions: https://github.com/dgilland/pydash/actions\n\
    \n\n.. |version| image:: http://img.shields.io/pypi/v/pydash.svg?style=flat-square\n\
    \    :target: https://pypi.python.org/pypi/pydash/\n\n.. |build| image:: https://img.shields.io/github/workflow/status/dgilland/pydash/Main/master?style=flat-square\n\
    \    :target: https://github.com/dgilland/pydash/actions\n\n.. |coveralls| image::\
    \ http://img.shields.io/coveralls/dgilland/pydash/master.svg?style=flat-square\n\
    \    :target: https://coveralls.io/r/dgilland/pydash\n\n.. |license| image:: http://img.shields.io/pypi/l/pydash.svg?style=flat-square\n\
    \    :target: https://pypi.python.org/pypi/pydash/\n\n.. _changelog:\n\nChangelog\n\
    =========\n\n\nv5.0.0 (2021-03-29)\n-------------------\n\n- Drop support for\
    \ Python 2.7. (**breaking change**)\n- Improve Unicode word splitting in string\
    \ functions to be inline with Lodash. Thanks mervynlee94_! (**breaking change**)\n\
    \n  - ``camel_case``\n  - ``human_case``\n  - ``kebab_case``\n  - ``lower_case``\n\
    \  - ``pascal_case``\n  - ``separator_case``\n  - ``slugify``\n  - ``snake_case``\n\
    \  - ``start_case``\n  - ``upper_case``\n\n- Optimize regular expression constants\
    \ used in ``pydash.strings`` by pre-compiling them to regular expression pattern\
    \ objects.\n\n\nv4.9.3 (2021-03-03)\n-------------------\n\n- Fix regression introduced\
    \ in ``v4.8.0`` that caused ``merge`` and ``merge_with`` to raise an exception\
    \ when passing ``None`` as the first argument.\n\n\nv4.9.2 (2020-12-24)\n-------------------\n\
    \n- Fix regression introduced in ``v4.9.1`` that broke ``pydash.get`` for dictionaries\
    \ and dot-delimited keys that reference integer dict-keys.\n\n\nv4.9.1 (2020-12-14)\n\
    -------------------\n\n- Fix bug in ``get/has`` that caused ``defaultdict`` objects\
    \ to get populated on key access.\n\n\nv4.9.0 (2020-10-27)\n-------------------\n\
    \n- Add ``default_to_any``. Thanks gonzalonaveira_!\n- Fix mishandling of key\
    \ names containing ``\\.`` in ``set_``, ``set_with``, and ``update_with`` where\
    \ the ``.`` was not treated as a literal value within the key name. Thanks zhaowb_!\n\
    \n\nv4.8.0 (2020-06-13)\n-------------------\n\n- Support attribute based setters\
    \ like ``argparse.Namespace`` in ``set_``, ``set_with``, ``update``, and ``update_with``.\n\
    - Fix exception in ``order_by`` when ``None`` used as a sort key. Thanks elijose55_!\n\
    - Fix behavior of ``pick_by`` to return the passed in argument when only one argument\
    \ given. Previously, an empty dictionary was returned. Thanks elijose55_!\n- Officially\
    \ support Python 3.8.\n\n\nv4.7.6 (2019-11-20)\n-------------------\n\nBug Fixes\n\
    +++++++++\n\n- Fix handling of ``Sequence``, ``Mapping``, and ``namedtuple`` types\
    \ in ``get`` so that their attributes aren't accessed during look-up. Thanks jwilson8767_!\n\
    \n\nv4.7.5 (2019-05-21)\n-------------------\n\nBug Fixes\n+++++++++\n\n- Fix\
    \ handling of string and byte values in ``clone_with`` and ``clone_deep_with``\
    \ when a customizer is used.\n- Fix handling of non-indexable iterables in ``find``\
    \ and ``find_last``.\n\n\nv4.7.4 (2018-11-14)\n-------------------\n\nBug Fixes\n\
    +++++++++\n\n- Raise an explicit exception in ``set_``, ``set_with``, ``update``,\
    \ and ``update_with`` when an object cannot be updated due to that object or one\
    \ of its nested objects not being subscriptable.\n\n\nv4.7.3 (2018-08-07)\n-------------------\n\
    \nBug Fixes\n+++++++++\n\n- Fix bug in ``spread`` where arguments were not being\
    \ passed to wrapped function properly.\n\n\nv4.7.1 (2018-08-03)\n-------------------\n\
    \nNew Features\n++++++++++++\n\n- Modify ``to_dict`` to first try to convert using\
    \ ``dict()`` before falling back to using ``pydash.helpers.iterator()``.\n\n\n\
    v4.7.0 (2018-07-26)\n-------------------\n\nMisc\n++++\n\n- Internal code optimizations.\n\
    \n\nv4.6.1 (2018-07-16)\n-------------------\n\nMisc\n++++\n\n- Support Python\
    \ 3.7.\n\n\nv4.6.0 (2018-07-10)\n-------------------\n\nMisc\n++++\n\n- Improve\
    \ performance of the following functions for large datasets:\n\n  - ``duplicates``\n\
    \  - ``sorted_uniq``\n  - ``sorted_uniq_by``\n  - ``union``\n  - ``union_by``\n\
    \  - ``union_with``\n  - ``uniq``\n  - ``uniq_by``\n  - ``uniq_with``\n  - ``xor``\n\
    \  - ``xor_by``\n  - ``xor_with``\n\n\nv4.5.0 (2018-03-20)\n-------------------\n\
    \nNew Features\n++++++++++++\n\n- Add ``jitter`` argument to ``retry``.\n\n\n\
    v4.4.1 (2018-03-14)\n-------------------\n\nNew Features\n++++++++++++\n\n- Add\
    \ ``attempt`` argument to ``on_exception`` callback in ``retry``. New function\
    \ signature is ``on_exception(exc, attempt)`` (previously was ``on_exception(exc)``).\
    \ All arguments to ``on_exception`` callback are now optional.\n\n\nv4.4.0 (2018-03-13)\n\
    -------------------\n\nNew Features\n++++++++++++\n\n- Add ``retry`` decorator\
    \ that will retry a function multiple times if the function raises an exception.\n\
    \n\nv4.3.3 (2018-03-02)\n-------------------\n\nBug Fixes\n+++++++++\n\n- Fix\
    \ regression in ``v4.3.2`` introduced by the support added for callable class\
    \ callbacks that changed the handling of callbacks that could not be inspected.\
    \ Prior to ``v4.3.2``, these callbacks would default to being passed a single\
    \ callback argument, but with ``v4.3.2`` these callbacks would be passed the full\
    \ set of callback arguments which could result an exception being raised due to\
    \ the callback not supporting that many arguments.\n\n\nv4.3.2 (2018-02-06)\n\
    -------------------\n\nBug Fixes\n+++++++++\n\n- Fix issue in ``defaults_deep``\
    \ where sources with non-dict values would raise an exception due to assumption\
    \ that object was always a dict.\n- Fix issue in ``curry`` where too many arguments\
    \ would be passed to the curried function when evaluating function if too many\
    \ arguments used in last function call.\n- Workaround issue in Python 2.7 where\
    \ callable classes used as callbacks were always passed the full count of arguments\
    \ even when the callable class only accept a subset of arguments.\n\n\nv4.3.1\
    \ (2017-12-19)\n-------------------\n\nBug Fixes\n+++++++++\n\n- Fix ``set_with``\
    \ so that callable values are not called when being set. This bug also impacted\
    \ the following functions by proxy:\n\n  - ``pick``\n  - ``pick_by``\n  - ``set_``\n\
    \  - ``transpose``\n  - ``zip_object_deep``\n\n\nv4.3.0 (2017-11-22)\n-------------------\n\
    \nNew Features\n++++++++++++\n\n- Add ``nest``.\n- Wrap non-iterables in a list\
    \ in ``to_list`` instead of raising an exception. Thanks efenka_!\n- Add ``split_strings``\
    \ argument to ``to_list`` to control whether strings are coverted to a list (``split_strings=True``)\
    \ or wrapped in a list (``split_strings=False``). Default is ``split_strings=True``.\
    \ Thanks efenka_!\n\n\nv4.2.1 (2017-09-08)\n-------------------\n\nBug Fixes\n\
    +++++++++\n\n- Ensure that ``to_path`` always returns a ``list``.\n- Fix ``get``\
    \ to work with path values other than just strings, integers, and lists.\n\n\n\
    v4.2.0 (2017-09-08)\n-------------------\n\nNew Features\n++++++++++++\n\n- Support\
    \ more iterator \"hooks\" in ``to_dict`` so non-iterators that expose an ``items()``,\
    \ ``iteritems()``, or has ``__dict__`` attributes will be converted using those\
    \ methods.\n- Support deep paths in ``omit`` and ``omit_by``. Thanks beck3905_!\n\
    - Support deep paths in ``pick`` and ``pick_by``. Thanks beck3905_!\n\nBug Fixes\n\
    +++++++++\n\n- Fix missing argument passing to matched function in ``cond``.\n\
    - Support passing a single list of pairs in ``cond`` instead of just pairs as\
    \ separate arguments.\n\n\nv4.1.0 (2017-06-09)\n-------------------\n\nNew Features\n\
    ++++++++++++\n\n- Officially support Python 3.6.\n- Add ``properties`` function\
    \ that returns list of path values for an object.\n- Add ``replace_end``.\n- Add\
    \ ``replace_start``.\n- Make ``iteratee`` support ``properties``-style callback\
    \ when a ``tuple`` is passed.\n- Make ``replace`` accept ``from_start`` and ``from_end``\
    \ arguments to limit replacement to start and/or end of string.\n\nBug Fixes\n\
    +++++++++\n\n- None\n\n\nv4.0.4 (2017-05-31)\n-------------------\n\nNew Features\n\
    ++++++++++++\n\n- None\n\nBug Fixes\n+++++++++\n\n- Improve performance of ``get``.\
    \ Thanks shaunpatterson_!\n\n\nv4.0.3 (2017-04-20)\n-------------------\n\nNew\
    \ Features\n++++++++++++\n\n- None\n\nBug Fixes\n+++++++++\n\n- Fix regression\
    \ in ``get`` where ``list`` and ``dict`` objects had attributes returned when\
    \ a key was missing but the key corresponded to an attribute name. For example,\
    \ ``pydash.get({}, 'update')`` would return ``{}.update()`` instead of ``None``.\
    \ Previous behavior was that only item-access was allowed for ``list`` and ``dict``\
    \ which has been restored.\n- Fix regression in ``invoke``/``invoke_map`` where\
    \ non-attributes could be invoked. For example, ``pydash.invoke({'items': lambda:\
    \ 1}, 'items')`` would return ``1`` instead of ``dict_items([('a', 'items')])``.\
    \ Previous behavior was that only attribute methods could be invoked which has\
    \ now been restored.\n\n\nv4.0.2 (2017-04-04)\n-------------------\n\nNew Features\n\
    ++++++++++++\n\n- None\n\nBug Fixes\n+++++++++\n\n- Fix regression in ``intersection``,\
    \ ``intersection_by``, and ``intersection_with`` introduced in ``v4.0.0`` where\
    \ the a single argument supplied to intersection should return the same argument\
    \ value instead of an empty list.\n\nBackwards-Incompatibilities\n+++++++++++++++++++++++++++\n\
    \n- None\n\n\nv4.0.1 (2017-04-04)\n-------------------\n\nNew Features\n++++++++++++\n\
    \n- Make ``property_`` work with deep path strings.\n\nBug Fixes\n+++++++++\n\n\
    - Revert removal of ``deep_pluck`` and rename to ``pluck``. Previously, ``deep_pluck``\
    \ was removed and ``map_`` was recommended as a replacement. However, ``deep_pluck``\
    \ (now defined as ``pluck``) functionality is not supported by ``map_`` so the\
    \ removal ``pluck`` was reverted.\n\nBackwards-Incompatibilities\n+++++++++++++++++++++++++++\n\
    \n- Remove ``property_deep`` (use ``property_``).\n\n\n.. _changelog-v4.0.0:\n\
    \nv4.0.0 (2017-04-03)\n-------------------\n\nNew Features\n++++++++++++\n\n-\
    \ Add ``assign_with``.\n- Add ``clamp``.\n- Add ``clone_deep_with``.\n- Add ``clone_with``.\n\
    - Add ``cond``. Thanks bharadwajyarlagadda_!\n- Add ``conforms``.\n- Add ``conforms_to``.\n\
    - Add ``default_to``. Thanks bharadwajyarlagadda_!\n- Add ``difference_by``.\n\
    - Add ``difference_with``.\n- Add ``divide``. Thanks bharadwajyarlagadda_!\n-\
    \ Add ``eq``. Thanks bharadwajyarlagadda_!\n- Add ``flat_map``.\n- Add ``flat_map_deep``.\n\
    - Add ``flat_map_depth``.\n- Add ``flatten_depth``.\n- Add ``flip``. Thanks bharadwajyarlagadda_!\n\
    - Add ``from_pairs``. Thanks bharadwajyarlagadda_!\n- Add ``intersection_by``.\n\
    - Add ``intersection_with``.\n- Add ``invert_by``.\n- Add ``invoke_map``.\n- Add\
    \ ``is_equal_with``. Thanks bharadwajyarlagadda_!\n- Add ``is_match_with``.\n\
    - Add ``is_set``. Thanks bharadwajyarlagadda_!\n- Add ``lower_case``. Thanks bharadwajyarlagadda_!\n\
    - Add ``lower_first``. Thanks bharadwajyarlagadda_!\n- Add ``max_by``.\n- Add\
    \ ``mean_by``.\n- Add ``merge_with``.\n- Add ``min_by``.\n- Add ``multiply``.\
    \ Thanks bharadwajyarlagadda_!\n- Add ``nth``. Thanks bharadwajyarlagadda_!\n\
    - Add ``nth_arg``. Thanks bharadwajyarlagadda_!\n- Add ``omit_by``.\n- Add ``over``.\
    \ Thanks bharadwajyarlagadda_!\n- Add ``over_every``. Thanks bharadwajyarlagadda_!\n\
    - Add ``over_some``. Thanks bharadwajyarlagadda_!\n- Add ``pick_by``.\n- Add ``pull_all``.\
    \ Thanks bharadwajyarlagadda_!\n- Add ``pull_all_by``.\n- Add ``pull_all_with``.\n\
    - Add ``range_right``. Thanks bharadwajyarlagadda_!\n- Add ``sample_size``. Thanks\
    \ bharadwajyarlagadda_!\n- Add ``set_with``.\n- Add ``sorted_index_by``.\n- Add\
    \ ``sorted_index_of``. Thanks bharadwajyarlagadda_!\n- Add ``sorted_last_index_by``.\n\
    - Add ``sorted_last_index_of``.\n- Add ``sorted_uniq``. Thanks bharadwajyarlagadda_!\n\
    - Add ``sorted_uniq_by``.\n- Add ``stub_list``. Thanks bharadwajyarlagadda_!\n\
    - Add ``stub_dict``. Thanks bharadwajyarlagadda_!\n- Add ``stub_false``. Thanks\
    \ bharadwajyarlagadda_!\n- Add ``stub_string``. Thanks bharadwajyarlagadda_!\n\
    - Add ``stub_true``. Thanks bharadwajyarlagadda_!\n- Add ``subtract``. Thanks\
    \ bharadwajyarlagadda_!\n- Add ``sum_by``.\n- Add ``to_integer``.\n- Add ``to_lower``.\
    \ Thanks bharadwajyarlagadda_!\n- Add ``to_path``. Thanks bharadwajyarlagadda_!\n\
    - Add ``to_upper``. Thanks bharadwajyarlagadda_!\n- Add ``unary``.\n- Add ``union_by``.\
    \ Thanks bharadwajyarlagadda_!\n- Add ``union_with``. Thanks bharadwajyarlagadda_!\n\
    - Add ``uniq_by``.\n- Add ``uniq_with``.\n- Add ``unset``.\n- Add ``update``.\n\
    - Add ``update_with``.\n- Add ``upper_case``. Thanks bharadwajyarlagadda_!\n-\
    \ Add ``upper_first``. Thanks bharadwajyarlagadda_!\n- Add ``xor_by``.\n- Add\
    \ ``xor_with``.\n- Add ``zip_object_deep``.\n- Make function returned by ``constant``\
    \ ignore extra arguments when called.\n- Make ``get`` support attribute access\
    \ within path.\n- Make ``iteratee`` treat an integer argument as a string path\
    \ (i.e. ``iteratee(1)`` is equivalent to ``iteratee('1')`` for creating a path\
    \ accessor function).\n- Make ``intersection`` work with unhashable types.\n-\
    \ Make ``range_`` support decrementing when ``start`` argument is greater than\
    \ ``stop`` argument.\n- Make ``xor`` maintain sort order of supplied arguments.\n\
    \nBug Fixes\n+++++++++\n\n- Fix ``find_last_key`` so that it iterates over object\
    \ in reverse.\n\nBackwards-Incompatibilities\n+++++++++++++++++++++++++++\n\n\
    - Make ``add`` only support two argument addition. (**breaking change**)\n- Make\
    \ ``difference`` return duplicate values from first argument and maintain sort\
    \ order. (**breaking change**)\n- Make ``invoke`` work on objects instead of collections.\
    \ Use ``invoke_map`` for collections. (**breaking change**)\n- Make ``set_`` support\
    \ mixed ``list``/``dict`` defaults within a single object based on whether key\
    \ or index path substrings used. (**breaking change**)\n- Make ``set_`` modify\
    \ object in place. (**breaking change**)\n- Only use ``merge`` callback result\
    \ if result is not ``None``. Previously, result from callback (if provided) was\
    \ used unconditionally. (**breaking change**)\n- Remove functions: (**breaking\
    \ change**)\n\n  - ``deep_pluck`` (no alternative) [**UPDATE:** ``deep_pluck``\
    \ functionality restored as ``pluck`` in ``v4.0.1``]\n  - ``mapiter`` (no alternative)\n\
    \  - ``pluck`` (use ``map_``)\n  - ``update_path`` (use ``update`` or ``update_with``)\n\
    \  - ``set_path`` (use ``set_`` or ``set_with``)\n\n- Remove aliases: (**breaking\
    \ change**)\n\n  - ``all_`` (use ``every``)\n  - ``any_`` (use ``some``)\n  -\
    \ ``append`` (use ``push``)\n  - ``average`` and ``avg`` (use ``mean`` or ``mean_by``)\n\
    \  - ``callback`` (use ``iteratee``)\n  - ``cat`` (use ``concat``)\n  - ``collect``\
    \ (use ``map_``)\n  - ``contains`` (use ``includes``)\n  - ``curve`` (use ``round_``)\n\
    \  - ``deep_get`` and ``get_path`` (use ``get``)\n  - ``deep_has`` and ``has_path``\
    \ (use ``has``)\n  - ``deep_prop`` (use ``property_deep``)\n  - ``deep_set`` (use\
    \ ``set_``)\n  - ``detect`` and ``find_where`` (use ``find``)\n  - ``each`` (use\
    \ ``for_each``)\n  - ``each_right`` (use ``for_each_right``)\n  - ``escape_re``\
    \ (use ``escape_reg_exp``)\n  - ``explode`` (use ``split``)\n  - ``extend`` (use\
    \ ``assign``)\n  - ``first`` (use ``head``)\n  - ``foldl`` (use ``reduce``)\n\
    \  - ``foldr`` (use ``reduce_right``)\n  - ``for_own`` (use ``for_each``)\n  -\
    \ ``for_own_right`` (use ``for_each_right``)\n  - ``implode`` (use ``join``)\n\
    \  - ``is_bool`` (use ``is_boolean``)\n  - ``is_int`` (use ``is_integer``)\n \
    \ - ``is_native`` (use ``is_builtin``)\n  - ``is_num`` (use ``is_number``)\n \
    \ - ``is_plain_object`` (use ``is_dict``)\n  - ``is_re`` (use ``is_reg_exp``)\n\
    \  - ``js_match`` (use ``reg_exp_js_match``)\n  - ``js_replace`` (use ``reg_exp_js_replace``)\n\
    \  - ``keys_in`` (use ``keys``)\n  - ``moving_average`` and ``moving_avg`` (use\
    \ ``moving_mean``)\n  - ``object_`` (use ``zip_object``)\n  - ``pad_left`` (use\
    \ ``pad_start``)\n  - ``pad_right`` (use ``pad_end``)\n  - ``pipe`` (use ``flow``)\n\
    \  - ``pipe_right`` and ``compose`` (use ``flow_right``)\n  - ``prop`` (use ``property_``)\n\
    \  - ``prop_of`` (use ``property_of``)\n  - ``pow_`` (use ``power``)\n  - ``re_replace``\
    \ (use ``reg_exp_replace``)\n  - ``rest`` (use ``tail``)\n  - ``select`` (use\
    \ ``filter_``)\n  - ``sigma`` (use ``std_deviation``)\n  - ``sort_by_all`` and\
    \ ``sort_by_order`` (use ``order_by``)\n  - ``trim_left`` (use ``trim_start``)\n\
    \  - ``trim_right`` (use ``trim_right``)\n  - ``trunc`` (use ``truncate``)\n \
    \ - ``underscore_case`` (use ``snake_case``)\n  - ``unique`` (use ``uniq``)\n\
    \  - ``values_in`` (use ``values``)\n  - ``where`` (use ``filter_``)\n\n- Rename\
    \ functions: (**breaking change**)\n\n  - ``deep_map_values`` to ``map_values_deep``\n\
    \  - ``deep_property`` to ``property_deep``\n  - ``include`` to ``includes``\n\
    \  - ``index_by`` to ``key_by``\n  - ``mod_args`` to ``over_args``\n  - ``moving_average``\
    \ to ``moving_mean``\n  - ``pairs`` to ``to_pairs``\n\n- Remove ``callback`` argument\
    \ from: (**breaking change**)\n\n  - ``assign``. Moved to ``assign_with``.\n \
    \ - ``clone`` and ``clone_deep``. Moved to ``clone_with`` and ``clone_deep_with``.\n\
    \  - ``is_match``. Moved to ``is_match_with``.\n  - ``max_`` and ``min_``. Moved\
    \ to ``max_by`` and ``min_by``.\n  - ``omit``. Moved to ``omit_by``.\n  - ``pick``.\
    \ Moved to ``pick_by``.\n  - ``sorted_index``. Moved to ``sorted_index_by``.\n\
    \  - ``sum_``. Moved to ``sum_by``.\n  - ``uniq``/``unique``. Moved to ``uniq_by``.\n\
    \n- Renamed ``callback`` argument to ``predicate``: (**breaking change**)\n\n\
    \  - ``drop_right_while``\n  - ``drop_while``\n  - ``every``\n  - ``filter_``\n\
    \  - ``find``\n  - ``find_key``\n  - ``find_last``\n  - ``find_index``\n  - ``find_last_index``\n\
    \  - ``find_last_key``\n  - ``partition``\n  - ``reject``\n  - ``remove``\n  -\
    \ ``some``\n  - ``take_right_while``\n  - ``take_while``\n\n- Renamed ``callback``\
    \ argument to ``iteratee``: (**breaking change**)\n\n  - ``count_by``\n  - ``duplicates``\n\
    \  - ``for_each``\n  - ``for_each_right``\n  - ``for_in``\n  - ``for_in_right``\n\
    \  - ``group_by``\n  - ``key_by``\n  - ``map_``\n  - ``map_keys``\n  - ``map_values``\n\
    \  - ``map_values_deep``\n  - ``mapcat``\n  - ``median``\n  - ``reduce_``\n  -\
    \ ``reduce_right``\n  - ``reductions``\n  - ``reductions_right``\n  - ``sort_by``\n\
    \  - ``times``\n  - ``transform``\n  - ``unzip_with``\n  - ``zip_with``\n  - ``zscore``\n\
    \n- Rename ``comparison`` argument in ``sort`` to ``comparator``.\n- Rename ``index``\
    \ and ``how_many`` arguments in ``splice`` to ``start`` and ``count``.\n- Remove\
    \ ``multivalue`` argument from ``invert``. Feature moved to ``invert_by``. (**breaking\
    \ change**)\n\n\nv3.4.8 (2017-01-05)\n-------------------\n\n- Make internal function\
    \ inspection methods work with Python 3 annotations. Thanks tgriesser_!\n\n\n\
    v3.4.7 (2016-11-01)\n-------------------\n\n- Fix bug in ``get`` where an iterable\
    \ default was iterated over instead of being returned when an object path wasn't\
    \ found. Thanks urbnjamesmi1_!\n\n\nv3.4.6 (2016-10-31)\n-------------------\n\
    \n- Fix bug in ``get`` where casting a string key to integer resulted in an uncaught\
    \ exception instead of the default value being returned instead. Thanks urbnjamesmi1_!\n\
    \n\nv3.4.5 (2016-10-16)\n-------------------\n\n- Add optional ``default`` parameter\
    \ to ``min_`` and ``max_`` functions that is used when provided iterable is empty.\n\
    - Fix bug in ``is_match`` where comparison between an empty ``source`` argument\
    \ returned ``None`` instead of ``True``.\n\n\nv3.4.4 (2016-09-06)\n-------------------\n\
    \n- Shallow copy each source in ``assign``/``extend`` instead of deep copying.\n\
    - Call ``copy.deepcopy`` in ``merge`` instead of the more resource intensive ``clone_deep``.\n\
    \n\nv3.4.3 (2016-04-07)\n-------------------\n\n- Fix minor issue in deep path\
    \ string parsing so that list indexing in paths can be specified as ``foo[0][1].bar``\
    \ instead of ``foo.[0].[1].bar``. Both formats are now supported.\n\n\nv3.4.2\
    \ (2016-03-24)\n-------------------\n\n- Fix bug in ``start_case`` where capitalized\
    \ characters after the first character of a word where mistakenly cast to lower\
    \ case.\n\n\nv3.4.1 (2015-11-03)\n-------------------\n\n- Fix Python 3.5, inspect,\
    \ and  pytest compatibility issue with ``py_`` chaining object when doctest run\
    \ on ``pydash.__init__.py``.\n\n\nv3.4.0 (2015-09-22)\n-------------------\n\n\
    - Optimize callback system for performance.\n\n  - Explicitly store arg count\
    \ on callback for ``pydash`` generated callbacks where the arg count is known.\
    \ This avoids the costly ``inspect.getargspec`` call.\n  - Eliminate usage of\
    \ costly ``guess_builtin_argcount`` which parsed docstrings, and instead only\
    \ ever pass a single argument to a builtin callback function.\n\n- Optimize ``get``/``set``\
    \ so that regex parsing is only done when special characters are contained in\
    \ the path key whereas before, all string paths were parsed.\n- Optimize ``is_builtin``\
    \ by checking for ``BuiltinFunctionType`` instance and then using ``dict`` look\
    \ up table instead of a ``list`` look up.\n- Optimize ``is_match`` by replacing\
    \ call to ``has`` with a ``try/except`` block.\n- Optimize ``push``/``append``\
    \ by using a native loop instead of callback mapping.\n\n\nv3.3.0 (2015-07-23)\n\
    -------------------\n\n- Add ``ceil``.\n- Add ``defaults_deep``.\n- Add ``floor``.\n\
    - Add ``get``.\n- Add ``gt``.\n- Add ``gte``.\n- Add ``is_iterable``.\n- Add ``lt``.\n\
    - Add ``lte``.\n- Add ``map_keys``.\n- Add ``method``.\n- Add ``method_of``.\n\
    - Add ``mod_args``.\n- Add ``set_``.\n- Add ``unzip_with``.\n- Add ``zip_with``.\n\
    - Make ``add`` support adding two numbers if passed in positionally.\n- Make ``get``\
    \ main definition and ``get_path`` its alias.\n- Make ``set_`` main definition\
    \ and ``deep_set`` its alias.\n\n\nv3.2.2 (2015-04-29)\n-------------------\n\n\
    - Catch ``AttributeError`` in ``helpers.get_item`` and return default value if\
    \ set.\n\n\nv3.2.1 (2015-04-29)\n-------------------\n\n- Fix bug in ``reduce_right``\
    \ where collection was not reversed correctly.\n\n\nv3.2.0 (2015-03-03)\n-------------------\n\
    \n- Add ``sort_by_order`` as alias of ``sort_by_all``.\n- Fix ``is_match`` to\
    \ not compare ``obj`` and ``source`` types using ``type`` and instead use ``isinstance``\
    \ comparisons exclusively.\n- Make ``sort_by_all`` accept an ``orders`` argument\
    \ for specifying the sort order of each key via boolean ``True`` (for ascending)\
    \ and ``False`` (for descending).\n- Make ``words`` accept a ``pattern`` argument\
    \ to override the default regex used for splitting words.\n- Make ``words`` handle\
    \ single character words better.\n\n\nv3.1.0 (2015-02-28)\n-------------------\n\
    \n- Add ``fill``.\n- Add ``in_range``.\n- Add ``matches_property``.\n- Add ``spread``.\n\
    - Add ``start_case``.\n- Make callbacks support ``matches_property`` style as\
    \ ``[key, value]`` or ``(key, value)``.\n- Make callbacks support shallow ``property``\
    \ style callbacks as ``[key]`` or ``(key,)``.\n\n\n.. _changelog-v3.0.0:\n\nv3.0.0\
    \ (2015-02-25)\n-------------------\n\n- Add ``ary``.\n- Add ``chars``.\n- Add\
    \ ``chop``.\n- Add ``chop_right``.\n- Add ``clean``.\n- Add ``commit`` method\
    \ to ``chain`` that returns a new chain with the computed ``chain.value()`` as\
    \ the initial value of the chain.\n- Add ``count_substr``.\n- Add ``decapitalize``.\n\
    - Add ``duplicates``.\n- Add ``has_substr``.\n- Add ``human_case``.\n- Add ``insert_substr``.\n\
    - Add ``is_blank``.\n- Add ``is_bool`` as alias of ``is_boolean``.\n- Add ``is_builtin``,\
    \ ``is_native``.\n- Add ``is_dict`` as alias of ``is_plain_object``.\n- Add ``is_int``\
    \ as alias of ``is_integer``.\n- Add ``is_match``.\n- Add ``is_num`` as alias\
    \ of ``is_number``.\n- Add ``is_tuple``.\n- Add ``join`` as alias of ``implode``.\n\
    - Add ``lines``.\n- Add ``number_format``.\n- Add ``pascal_case``.\n- Add ``plant``\
    \ method to ``chain`` that returns a cloned chain with a new initial value.\n\
    - Add ``predecessor``.\n- Add ``property_of``, ``prop_of``.\n- Add ``prune``.\n\
    - Add ``re_replace``.\n- Add ``rearg``.\n- Add ``replace``.\n- Add ``run`` as\
    \ alias of ``chain.value``.\n- Add ``separator_case``.\n- Add ``series_phrase``.\n\
    - Add ``series_phrase_serial``.\n- Add ``slugify``.\n- Add ``sort_by_all``.\n\
    - Add ``strip_tags``.\n- Add ``substr_left``.\n- Add ``substr_left_end``.\n- Add\
    \ ``substr_right``.\n- Add ``substr_right_end``.\n- Add ``successor``.\n- Add\
    \ ``swap_case``.\n- Add ``title_case``.\n- Add ``truncate`` as alias of ``trunc``.\n\
    - Add ``to_boolean``.\n- Add ``to_dict``, ``to_plain_object``.\n- Add ``to_number``.\n\
    - Add ``underscore_case`` as alias of ``snake_case``.\n- Add ``unquote``.\n- Fix\
    \ ``deep_has`` to return ``False`` when ``ValueError`` raised during path checking.\n\
    - Fix ``pad`` so that it doesn't over pad beyond provided length.\n- Fix ``trunc``/``truncate``\
    \ so that they handle texts shorter than the max string length correctly.\n- Make\
    \ the following functions work with empty strings and ``None``: (**breaking change**)\
    \ Thanks k7sleeper_!\n\n  - ``camel_case``\n  - ``capitalize``\n  - ``chars``\n\
    \  - ``chop``\n  - ``chop_right``\n  - ``class_case``\n  - ``clean``\n  - ``count_substr``\n\
    \  - ``decapitalize``\n  - ``ends_with``\n  - ``join``\n  - ``js_replace``\n \
    \ - ``kebab_case``\n  - ``lines``\n  - ``quote``\n  - ``re_replace``\n  - ``replace``\n\
    \  - ``series_phrase``\n  - ``series_phrase_serial``\n  - ``starts_with``\n  -\
    \ ``surround``\n\n- Make callback invocation have better support for builtin functions\
    \ and methods. Previously, if one wanted to pass a builtin function or method\
    \ as a callback, it had to be wrapped in a lambda which limited the number of\
    \ arguments that would be passed it. For example, ``_.each([1, 2, 3], array.append)``\
    \ would fail and would need to be converted to ``_.each([1, 2, 3], lambda item:\
    \ array.append(item)``. That is no longer the case as the non-wrapped method is\
    \ now supported.\n- Make ``capitalize`` accept ``strict`` argument to control\
    \ whether to convert the rest of the string to lower case or not. Defaults to\
    \ ``True``.\n- Make ``chain`` support late passing of initial ``value`` argument.\n\
    - Make ``chain`` not store computed ``value()``. (**breaking change**)\n- Make\
    \ ``drop``, ``drop_right``, ``take``, and ``take_right`` have default ``n=1``.\n\
    - Make ``is_indexed`` return ``True`` for tuples.\n- Make ``partial`` and ``partial_right``\
    \ accept keyword arguments.\n- Make ``pluck`` style callbacks support deep paths.\
    \ (**breaking change**)\n- Make ``re_replace`` accept non-string arguments.\n\
    - Make ``sort_by`` accept ``reverse`` parameter.\n- Make ``splice`` work with\
    \ strings.\n- Make ``to_string`` convert ``None`` to empty string. (**breaking\
    \ change**)\n- Move ``arrays.join`` to ``strings.join``. (**breaking change**)\n\
    - Rename ``join``/``implode``'s second parameter from ``delimiter`` to ``separator``.\
    \ (**breaking change**)\n- Rename ``split``/``explode``'s second parameter from\
    \ ``delimiter`` to ``separator``. (**breaking change**)\n- Reorder function arguments\
    \ for ``after`` from ``(n, func)`` to ``(func, n)``. (**breaking change**)\n-\
    \ Reorder function arguments for ``before`` from ``(n, func)`` to ``(func, n)``.\
    \ (**breaking change**)\n- Reorder function arguments for ``times`` from ``(n,\
    \ callback)`` to ``(callback, n)``. (**breaking change**)\n- Reorder function\
    \ arguments for ``js_match`` from ``(reg_exp, text)`` to ``(text, reg_exp)``.\
    \ (**breaking change**)\n- Reorder function arguments for ``js_replace`` from\
    \ ``(reg_exp, text, repl)`` to ``(text, reg_exp, repl)``. (**breaking change**)\n\
    - Support iteration over class instance properties for non-list, non-dict, and\
    \ non-iterable objects.\n\n\nv2.4.2 (2015-02-03)\n-------------------\n\n- Fix\
    \ ``remove`` so that array is modified after callback iteration.\n\n\nv2.4.1 (2015-01-11)\n\
    -------------------\n\n- Fix ``kebab_case`` so that it casts string to lower case.\n\
    \n\nv2.4.0 (2015-01-07)\n-------------------\n\n- Add ``ensure_ends_with``. Thanks\
    \ k7sleeper_!\n- Add ``ensure_starts_with``. Thanks k7sleeper_!\n- Add ``quote``.\
    \ Thanks k7sleeper_!\n- Add ``surround``. Thanks k7sleeper_!\n\n\nv2.3.2 (2014-12-10)\n\
    -------------------\n\n- Fix ``merge`` and ``assign``/``extend`` so they apply\
    \ ``clone_deep`` to source values before assigning to destination object.\n- Make\
    \ ``merge`` accept a callback as a positional argument if it is last.\n\n\nv2.3.1\
    \ (2014-12-07)\n-------------------\n\n- Add ``pipe`` and ``pipe_right`` as aliases\
    \ of ``flow`` and ``flow_right``.\n- Fix ``merge`` so that trailing ``{}`` or\
    \ ``[]`` don't overwrite previous source values.\n- Make ``py_`` an alias for\
    \ ``_``.\n\n\nv2.3.0 (2014-11-10)\n-------------------\n\n- Support ``type`` callbacks\
    \ (e.g. ``int``, ``float``, ``str``, etc.) by only passing a single callback argument\
    \ when invoking the callback.\n- Drop official support for Python 3.2. Too many\
    \ testing dependencies no longer work on it.\n\n\nv2.2.0 (2014-10-28)\n-------------------\n\
    \n- Add ``append``.\n- Add ``deep_get``.\n- Add ``deep_has``.\n- Add ``deep_map_values``.\n\
    - Add ``deep_set``.\n- Add ``deep_pluck``.\n- Add ``deep_property``.\n- Add ``join``.\n\
    - Add ``pop``.\n- Add ``push``.\n- Add ``reverse``.\n- Add ``shift``.\n- Add ``sort``.\n\
    - Add ``splice``.\n- Add ``unshift``.\n- Add ``url``.\n- Fix bug in ``snake_case``\
    \ that resulted in returned string not being converted to lower case.\n- Fix bug\
    \ in chaining method access test which skipped the actual test.\n- Make ``_``\
    \ instance alias method access to methods with a trailing underscore in their\
    \ name. For example, ``_.map()`` becomes an alias for ``map_()``.\n- Make ``deep_prop``\
    \ an alias of ``deep_property``.\n- Make ``has`` work with deep paths.\n- Make\
    \ ``has_path`` an alias of ``deep_has``.\n- Make ``get_path`` handle escaping\
    \ the ``.`` delimiter for string keys.\n- Make ``get_path`` handle list indexing\
    \ using strings such as ``'0.1.2'`` to access ``'value'`` in ``[[0, [0, 0, 'value']]]``.\n\
    - Make ``concat`` an alias of ``cat``.\n\n\nv2.1.0 (2014-09-17)\n-------------------\n\
    \n- Add ``add``, ``sum_``.\n- Add ``average``, ``avg``, ``mean``.\n- Add ``mapiter``.\n\
    - Add ``median``.\n- Add ``moving_average``, ``moving_avg``.\n- Add ``power``,\
    \ ``pow_``.\n- Add ``round_``, ``curve``.\n- Add ``scale``.\n- Add ``slope``.\n\
    - Add ``std_deviation``, ``sigma``.\n- Add ``transpose``.\n- Add ``variance``.\n\
    - Add ``zscore``.\n\n\n.. _changelog-v2.0.0:\n\nv2.0.0 (2014-09-11)\n-------------------\n\
    \n- Add ``_`` instance that supports both method chaining and module method calling.\n\
    - Add ``cat``.\n- Add ``conjoin``.\n- Add ``deburr``.\n- Add ``disjoin``.\n- Add\
    \ ``explode``.\n- Add ``flatten_deep``.\n- Add ``flow``.\n- Add ``flow_right``.\n\
    - Add ``get_path``.\n- Add ``has_path``.\n- Add ``implode``.\n- Add ``intercalate``.\n\
    - Add ``interleave``.\n- Add ``intersperse``.\n- Add ``is_associative``.\n- Add\
    \ ``is_even``.\n- Add ``is_float``.\n- Add ``is_decreasing``.\n- Add ``is_increasing``.\n\
    - Add ``is_indexed``.\n- Add ``is_instance_of``.\n- Add ``is_integer``.\n- Add\
    \ ``is_json``.\n- Add ``is_monotone``.\n- Add ``is_negative``.\n- Add ``is_odd``.\n\
    - Add ``is_positive``.\n- Add ``is_strictly_decreasing``.\n- Add ``is_strictly_increasing``.\n\
    - Add ``is_zero``.\n- Add ``iterated``.\n- Add ``js_match``.\n- Add ``js_replace``.\n\
    - Add ``juxtapose``.\n- Add ``mapcat``.\n- Add ``reductions``.\n- Add ``reductions_right``.\n\
    - Add ``rename_keys``.\n- Add ``set_path``.\n- Add ``split_at``.\n- Add ``thru``.\n\
    - Add ``to_string``.\n- Add ``update_path``.\n- Add ``words``.\n- Make callback\
    \ function calling adapt to argspec of given callback function. If, for example,\
    \ the full callback signature is ``(item, index, obj)`` but the passed in callback\
    \ only supports ``(item)``, then only ``item`` will be passed in when callback\
    \ is invoked. Previously, callbacks had to support all arguments or implement\
    \ star-args.\n- Make ``chain`` lazy and only compute the final value when ``value``\
    \ called.\n- Make ``compose`` an alias of ``flow_right``.\n- Make ``flatten``\
    \ shallow by default, remove callback option, and add ``is_deep`` option. (**breaking\
    \ change**)\n- Make ``is_number`` return ``False`` for boolean ``True`` and ``False``.\
    \ (**breaking change**)\n- Make ``invert`` accept ``multivalue`` argument.\n-\
    \ Make ``result`` accept ``default`` argument.\n- Make ``slice_`` accept optional\
    \ ``start`` and ``end`` arguments.\n- Move files in ``pydash/api/`` to ``pydash/``.\
    \ (**breaking change**)\n- Move predicate functions from ``pydash.api.objects``\
    \ to ``pydash.api.predicates``. (**breaking change**)\n- Rename ``create_callback``\
    \ to ``iteratee``. (**breaking change**)\n- Rename ``functions`` to ``callables``\
    \ in order to allow ``functions.py`` to exist at the root of the pydash module\
    \ folder. (**breaking change**)\n- Rename *private* utility function ``_iter_callback``\
    \ to ``itercallback``. (**breaking change**)\n- Rename *private* utility function\
    \ ``_iter_list_callback`` to ``iterlist_callback``. (**breaking change**)\n- Rename\
    \ *private* utility function ``_iter_dict_callback`` to ``iterdict_callback``.\
    \ (**breaking change**)\n- Rename *private* utility function ``_iterate`` to ``iterator``.\
    \ (**breaking change**)\n- Rename *private* utility function ``_iter_dict`` to\
    \ ``iterdict``. (**breaking change**)\n- Rename *private* utility function ``_iter_list``\
    \ to ``iterlist``. (**breaking change**)\n- Rename *private* utility function\
    \ ``_iter_unique`` to ``iterunique``. (**breaking change**)\n- Rename *private*\
    \ utility function ``_get_item`` to ``getitem``. (**breaking change**)\n- Rename\
    \ *private* utility function ``_set_item`` to ``setitem``. (**breaking change**)\n\
    - Rename *private* utility function ``_deprecated`` to ``deprecated``. (**breaking\
    \ change**)\n- Undeprecate ``tail`` and make alias of ``rest``.\n\n\nv1.1.0 (2014-08-19)\n\
    -------------------\n\n- Add ``attempt``.\n- Add ``before``.\n- Add ``camel_case``.\n\
    - Add ``capitalize``.\n- Add ``chunk``.\n- Add ``curry_right``.\n- Add ``drop_right``.\n\
    - Add ``drop_right_while``.\n- Add ``drop_while``.\n- Add ``ends_with``.\n- Add\
    \ ``escape_reg_exp`` and ``escape_re``.\n- Add ``is_error``.\n- Add ``is_reg_exp``\
    \ and ``is_re``.\n- Add ``kebab_case``.\n- Add ``keys_in`` as alias of ``keys``.\n\
    - Add ``negate``.\n- Add ``pad``.\n- Add ``pad_left``.\n- Add ``pad_right``.\n\
    - Add ``partition``.\n- Add ``pull_at``.\n- Add ``repeat``.\n- Add ``slice_``.\n\
    - Add ``snake_case``.\n- Add ``sorted_last_index``.\n- Add ``starts_with``.\n\
    - Add ``take_right``.\n- Add ``take_right_while``.\n- Add ``take_while``.\n- Add\
    \ ``trim``.\n- Add ``trim_left``.\n- Add ``trim_right``.\n- Add ``trunc``.\n-\
    \ Add ``values_in`` as alias of ``values``.\n- Create ``pydash.api.strings`` module.\n\
    - Deprecate ``tail``.\n- Modify ``drop`` to accept ``n`` argument and remove as\
    \ alias of ``rest``.\n- Modify ``take`` to accept ``n`` argument and remove as\
    \ alias of ``first``.\n- Move ``escape`` and ``unescape`` from ``pydash.api.utilities``\
    \ to ``pydash.api.strings``. (**breaking change**)\n- Move ``range_`` from ``pydash.api.arrays``\
    \ to ``pydash.api.utilities``. (**breaking change**)\n\n\n.. _changelog-v1.0.0:\n\
    \nv1.0.0 (2014-08-05)\n-------------------\n\n- Add Python 2.6 and Python 3 support.\n\
    - Add ``after``.\n- Add ``assign`` and ``extend``. Thanks nathancahill_!\n- Add\
    \ ``callback`` and ``create_callback``.\n- Add ``chain``.\n- Add ``clone``.\n\
    - Add ``clone_deep``.\n- Add ``compose``.\n- Add ``constant``.\n- Add ``count_by``.\
    \ Thanks nathancahill_!\n- Add ``curry``.\n- Add ``debounce``.\n- Add ``defaults``.\
    \ Thanks nathancahill_!\n- Add ``delay``.\n- Add ``escape``.\n- Add ``find_key``.\
    \ Thanks nathancahill_!\n- Add ``find_last``. Thanks nathancahill_!\n- Add ``find_last_index``.\
    \ Thanks nathancahill_!\n- Add ``find_last_key``. Thanks nathancahill_!\n- Add\
    \ ``for_each``. Thanks nathancahill_!\n- Add ``for_each_right``. Thanks nathancahill_!\n\
    - Add ``for_in``. Thanks nathancahill_!\n- Add ``for_in_right``. Thanks nathancahill_!\n\
    - Add ``for_own``. Thanks nathancahill_!\n- Add ``for_own_right``. Thanks nathancahill_!\n\
    - Add ``functions_`` and ``methods``. Thanks nathancahill_!\n- Add ``group_by``.\
    \ Thanks nathancahill_!\n- Add ``has``. Thanks nathancahill_!\n- Add ``index_by``.\
    \ Thanks nathancahill_!\n- Add ``identity``.\n- Add ``inject``.\n- Add ``invert``.\n\
    - Add ``invoke``. Thanks nathancahill_!\n- Add ``is_list``. Thanks nathancahill_!\n\
    - Add ``is_boolean``. Thanks nathancahill_!\n- Add ``is_empty``. Thanks nathancahill_!\n\
    - Add ``is_equal``.\n- Add ``is_function``. Thanks nathancahill_!\n- Add ``is_none``.\
    \ Thanks nathancahill_!\n- Add ``is_number``. Thanks nathancahill_!\n- Add ``is_object``.\n\
    - Add ``is_plain_object``.\n- Add ``is_string``. Thanks nathancahill_!\n- Add\
    \ ``keys``.\n- Add ``map_values``.\n- Add ``matches``.\n- Add ``max_``. Thanks\
    \ nathancahill_!\n- Add ``memoize``.\n- Add ``merge``.\n- Add ``min_``. Thanks\
    \ nathancahill_!\n- Add ``noop``.\n- Add ``now``.\n- Add ``omit``.\n- Add ``once``.\n\
    - Add ``pairs``.\n- Add ``parse_int``.\n- Add ``partial``.\n- Add ``partial_right``.\n\
    - Add ``pick``.\n- Add ``property_`` and ``prop``.\n- Add ``pull``. Thanks nathancahill_!\n\
    - Add ``random``.\n- Add ``reduce_`` and ``foldl``.\n- Add ``reduce_right`` and\
    \ ``foldr``.\n- Add ``reject``. Thanks nathancahill_!\n- Add ``remove``.\n- Add\
    \ ``result``.\n- Add ``sample``.\n- Add ``shuffle``.\n- Add ``size``.\n- Add ``sort_by``.\
    \ Thanks nathancahill_!\n- Add ``tap``.\n- Add ``throttle``.\n- Add ``times``.\n\
    - Add ``transform``.\n- Add ``to_list``. Thanks nathancahill_!\n- Add ``unescape``.\n\
    - Add ``unique_id``.\n- Add ``values``.\n- Add ``wrap``.\n- Add ``xor``.\n\n\n\
    .. _changelog-v0.0.0:\n\nv0.0.0 (2014-07-22)\n-------------------\n\n- Add ``all_``.\n\
    - Add ``any_``.\n- Add ``at``.\n- Add ``bisect_left``.\n- Add ``collect``.\n-\
    \ Add ``collections``.\n- Add ``compact``.\n- Add ``contains``.\n- Add ``detect``.\n\
    - Add ``difference``.\n- Add ``drop``.\n- Add ``each``.\n- Add ``each_right``.\n\
    - Add ``every``.\n- Add ``filter_``.\n- Add ``find``.\n- Add ``find_index``.\n\
    - Add ``find_where``.\n- Add ``first``.\n- Add ``flatten``.\n- Add ``head``.\n\
    - Add ``include``.\n- Add ``index_of``.\n- Add ``initial``.\n- Add ``intersection``.\n\
    - Add ``last``.\n- Add ``last_index_of``.\n- Add ``map_``.\n- Add ``object_``.\n\
    - Add ``pluck``.\n- Add ``range_``.\n- Add ``rest``.\n- Add ``select``.\n- Add\
    \ ``some``.\n- Add ``sorted_index``.\n- Add ``tail``.\n- Add ``take``.\n- Add\
    \ ``union``.\n- Add ``uniq``.\n- Add ``unique``.\n- Add ``unzip``.\n- Add ``where``.\n\
    - Add ``without``.\n- Add ``zip_``.\n- Add ``zip_object``.\n\n\n.. _nathancahill:\
    \ https://github.com/nathancahill\n.. _k7sleeper: https://github.com/k7sleeper\n\
    .. _bharadwajyarlagadda: https://github.com/bharadwajyarlagadda\n.. _urbnjamesmi1:\
    \ https://github.com/urbnjamesmi1\n.. _tgriesser: https://github.com/tgriesser\n\
    .. _shaunpatterson: https://github.com/shaunpatterson\n.. _beck3905: https://github.com/beck3905\n\
    .. _efenka: https://github.com/efenka\n.. _jwilson8767: https://github.com/jwilson8767\n\
    .. _elijose55: https://github.com/elijose55\n.. _gonzalonaveira: https://github.com/gonzalonaveira\n\
    .. _zhaowb: https://github.com/zhaowb\n.. _mervynlee94: https://github.com/mervynlee94\n\
    \nMIT License\n\nCopyright (c) 2020 Derrick Gilland\n\nPermission is hereby granted,\
    \ free of charge, to any person obtaining a copy of this software and associated\
    \ documentation files (the \"Software\"), to deal in the Software without restriction,\
    \ including without limitation the rights to use, copy, modify, merge, publish,\
    \ distribute, sublicense, and/or sell copies of the Software, and to permit persons\
    \ to whom the Software is furnished to do so, subject to the following conditions:\n\
    \nThe above copyright notice and this permission notice shall be included in all\
    \ copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED\
    \ \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT\
    \ LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE\
    \ AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE\
    \ FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\
    \ TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR\
    \ THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
name: pydash
version: 5.0.0
wheel:
- - Wheel-Version
  - '1.0'
- - Generator
  - bdist_wheel (0.36.2)
- - Root-Is-Purelib
  - 'true'
- - Tag
  - py3-none-any
