entry_points: {}
filename: toml-0.10.2-py2.py3-none-any.whl
has_license: true
metadata:
- - Metadata-Version
  - '2.1'
- - Name
  - toml
- - Version
  - 0.10.2
- - Summary
  - Python Library for Tom's Obvious, Minimal Language
- - Home-page
  - https://github.com/uiri/toml
- - Author
  - William Pearson
- - Author-email
  - uiri@xqz.ca
- - License
  - MIT
- - Platform
  - UNKNOWN
- - Classifier
  - 'Development Status :: 5 - Production/Stable'
- - Classifier
  - 'Intended Audience :: Developers'
- - Classifier
  - 'License :: OSI Approved :: MIT License'
- - Classifier
  - 'Operating System :: OS Independent'
- - Classifier
  - 'Programming Language :: Python'
- - Classifier
  - 'Programming Language :: Python :: 2'
- - Classifier
  - 'Programming Language :: Python :: 2.6'
- - Classifier
  - 'Programming Language :: Python :: 2.7'
- - Classifier
  - 'Programming Language :: Python :: 3'
- - Classifier
  - 'Programming Language :: Python :: 3.3'
- - Classifier
  - 'Programming Language :: Python :: 3.4'
- - Classifier
  - 'Programming Language :: Python :: 3.5'
- - Classifier
  - 'Programming Language :: Python :: 3.6'
- - Classifier
  - 'Programming Language :: Python :: 3.7'
- - Classifier
  - 'Programming Language :: Python :: 3.8'
- - Classifier
  - 'Programming Language :: Python :: 3.9'
- - Classifier
  - 'Programming Language :: Python :: Implementation :: CPython'
- - Classifier
  - 'Programming Language :: Python :: Implementation :: PyPy'
- - Requires-Python
  - '>=2.6, !=3.0.*, !=3.1.*, !=3.2.*'
- - Description
  - "****\nTOML\n****\n\n.. image:: https://img.shields.io/pypi/v/toml\n    :target:\
    \ https://pypi.org/project/toml/\n\n.. image:: https://travis-ci.org/uiri/toml.svg?branch=master\n\
    \    :target: https://travis-ci.org/uiri/toml\n\n.. image:: https://img.shields.io/pypi/pyversions/toml.svg\n\
    \    :target: https://pypi.org/project/toml/\n\n\nA Python library for parsing\
    \ and creating `TOML <https://en.wikipedia.org/wiki/TOML>`_.\n\nThe module passes\
    \ `the TOML test suite <https://github.com/BurntSushi/toml-test>`_.\n\nSee also:\n\
    \n* `The TOML Standard <https://github.com/toml-lang/toml>`_\n* `The currently\
    \ supported TOML specification <https://github.com/toml-lang/toml/blob/v0.5.0/README.md>`_\n\
    \nInstallation\n============\n\nTo install the latest release on `PyPI <https://pypi.org/project/toml/>`_,\n\
    simply run:\n\n::\n\n  pip install toml\n\nOr to install the latest development\
    \ version, run:\n\n::\n\n  git clone https://github.com/uiri/toml.git\n  cd toml\n\
    \  python setup.py install\n\nQuick Tutorial\n==============\n\n*toml.loads* takes\
    \ in a string containing standard TOML-formatted data and\nreturns a dictionary\
    \ containing the parsed data.\n\n.. code:: pycon\n\n  >>> import toml\n  >>> toml_string\
    \ = \"\"\"\n  ... # This is a TOML document.\n  ...\n  ... title = \"TOML Example\"\
    \n  ...\n  ... [owner]\n  ... name = \"Tom Preston-Werner\"\n  ... dob = 1979-05-27T07:32:00-08:00\
    \ # First class dates\n  ...\n  ... [database]\n  ... server = \"192.168.1.1\"\
    \n  ... ports = [ 8001, 8001, 8002 ]\n  ... connection_max = 5000\n  ... enabled\
    \ = true\n  ...\n  ... [servers]\n  ...\n  ...   # Indentation (tabs and/or spaces)\
    \ is allowed but not required\n  ...   [servers.alpha]\n  ...   ip = \"10.0.0.1\"\
    \n  ...   dc = \"eqdc10\"\n  ...\n  ...   [servers.beta]\n  ...   ip = \"10.0.0.2\"\
    \n  ...   dc = \"eqdc10\"\n  ...\n  ... [clients]\n  ... data = [ [\"gamma\",\
    \ \"delta\"], [1, 2] ]\n  ...\n  ... # Line breaks are OK when inside arrays\n\
    \  ... hosts = [\n  ...   \"alpha\",\n  ...   \"omega\"\n  ... ]\n  ... \"\"\"\
    \n  >>> parsed_toml = toml.loads(toml_string)\n\n\n*toml.dumps* takes a dictionary\
    \ and returns a string containing the\ncorresponding TOML-formatted data.\n\n\
    .. code:: pycon\n\n  >>> new_toml_string = toml.dumps(parsed_toml)\n  >>> print(new_toml_string)\n\
    \  title = \"TOML Example\"\n  [owner]\n  name = \"Tom Preston-Werner\"\n  dob\
    \ = 1979-05-27T07:32:00Z\n  [database]\n  server = \"192.168.1.1\"\n  ports =\
    \ [ 8001, 8001, 8002,]\n  connection_max = 5000\n  enabled = true\n  [clients]\n\
    \  data = [ [ \"gamma\", \"delta\",], [ 1, 2,],]\n  hosts = [ \"alpha\", \"omega\"\
    ,]\n  [servers.alpha]\n  ip = \"10.0.0.1\"\n  dc = \"eqdc10\"\n  [servers.beta]\n\
    \  ip = \"10.0.0.2\"\n  dc = \"eqdc10\"\n\n*toml.dump* takes a dictionary and\
    \ a file descriptor and returns a string containing the\ncorresponding TOML-formatted\
    \ data.\n\n.. code:: pycon\n\n  >>> with open('new_toml_file.toml', 'w') as f:\n\
    \  ...     new_toml_string = toml.dump(parsed_toml, f)\n  >>> print(new_toml_string)\n\
    \  title = \"TOML Example\"\n  [owner]\n  name = \"Tom Preston-Werner\"\n  dob\
    \ = 1979-05-27T07:32:00Z\n  [database]\n  server = \"192.168.1.1\"\n  ports =\
    \ [ 8001, 8001, 8002,]\n  connection_max = 5000\n  enabled = true\n  [clients]\n\
    \  data = [ [ \"gamma\", \"delta\",], [ 1, 2,],]\n  hosts = [ \"alpha\", \"omega\"\
    ,]\n  [servers.alpha]\n  ip = \"10.0.0.1\"\n  dc = \"eqdc10\"\n  [servers.beta]\n\
    \  ip = \"10.0.0.2\"\n  dc = \"eqdc10\"\n\nFor more functions, view the API Reference\
    \ below.\n\nNote\n----\n\nFor Numpy users, by default the data types ``np.floatX``\
    \ will not be translated to floats by toml, but will instead be encoded as strings.\
    \ To get around this, specify the ``TomlNumpyEncoder`` when saving your data.\n\
    \n.. code:: pycon\n\n  >>> import toml\n  >>> import numpy as np\n  >>> a = np.arange(0,\
    \ 10, dtype=np.double)\n  >>> output = {'a': a}\n  >>> toml.dumps(output)\n  'a\
    \ = [ \"0.0\", \"1.0\", \"2.0\", \"3.0\", \"4.0\", \"5.0\", \"6.0\", \"7.0\",\
    \ \"8.0\", \"9.0\",]\\n'\n  >>> toml.dumps(output, encoder=toml.TomlNumpyEncoder())\n\
    \  'a = [ 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0,]\\n'\n\nAPI Reference\n\
    =============\n\n``toml.load(f, _dict=dict)``\n  Parse a file or a list of files\
    \ as TOML and return a dictionary.\n\n  :Args:\n    * ``f``: A path to a file,\
    \ list of filepaths (to be read into single\n      object) or a file descriptor\n\
    \    * ``_dict``: The class of the dictionary object to be returned\n\n  :Returns:\n\
    \    A dictionary (or object ``_dict``) containing parsed TOML data\n\n  :Raises:\n\
    \    * ``TypeError``: When ``f`` is an invalid type or is a list containing\n\
    \      invalid types\n    * ``TomlDecodeError``: When an error occurs while decoding\
    \ the file(s)\n\n``toml.loads(s, _dict=dict)``\n  Parse a TOML-formatted string\
    \ to a dictionary.\n\n  :Args:\n    * ``s``: The TOML-formatted string to be parsed\n\
    \    * ``_dict``: Specifies the class of the returned toml dictionary\n\n  :Returns:\n\
    \    A dictionary (or object ``_dict``) containing parsed TOML data\n\n  :Raises:\n\
    \    * ``TypeError``: When a non-string object is passed\n    * ``TomlDecodeError``:\
    \ When an error occurs while decoding the\n      TOML-formatted string\n\n``toml.dump(o,\
    \ f, encoder=None)``\n  Write a dictionary to a file containing TOML-formatted\
    \ data\n\n  :Args:\n    * ``o``: An object to be converted into TOML\n    * ``f``:\
    \ A File descriptor where the TOML-formatted output should be stored\n    * ``encoder``:\
    \ An instance of ``TomlEncoder`` (or subclass) for encoding the object. If ``None``,\
    \ will default to ``TomlEncoder``\n\n  :Returns:\n    A string containing the\
    \ TOML-formatted data corresponding to object ``o``\n\n  :Raises:\n    * ``TypeError``:\
    \ When anything other than file descriptor is passed\n\n``toml.dumps(o, encoder=None)``\n\
    \  Create a TOML-formatted string from an input object\n\n  :Args:\n    * ``o``:\
    \ An object to be converted into TOML\n    * ``encoder``: An instance of ``TomlEncoder``\
    \ (or subclass) for encoding the object. If ``None``, will default to ``TomlEncoder``\n\
    \n  :Returns:\n    A string containing the TOML-formatted data corresponding to\
    \ object ``o``\n\n\n\nLicensing\n=========\n\nThis project is released under the\
    \ terms of the MIT Open Source License. View\n*LICENSE.txt* for more information.\n"
name: toml
version: 0.10.2
wheel:
- - Wheel-Version
  - '1.0'
- - Generator
  - bdist_wheel (0.35.1)
- - Root-Is-Purelib
  - 'true'
- - Tag
  - py2-none-any
- - Tag
  - py3-none-any
